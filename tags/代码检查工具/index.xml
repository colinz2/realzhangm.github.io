<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>代码检查工具 on zhangm blog</title><link>https://realzhangm.github.io/tags/%E4%BB%A3%E7%A0%81%E6%A3%80%E6%9F%A5%E5%B7%A5%E5%85%B7/</link><description>Recent content in 代码检查工具 on zhangm blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright © 2018–2022, zhangm; all rights reserved.</copyright><lastBuildDate>Sun, 14 Jan 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://realzhangm.github.io/tags/%E4%BB%A3%E7%A0%81%E6%A3%80%E6%9F%A5%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>C/C++代码检查&amp;运行时检查工具</title><link>https://realzhangm.github.io/post/cc++%E7%A8%8B%E5%BA%8F%E6%A3%80%E6%9F%A5%E5%B7%A5%E5%85%B7/</link><pubDate>Sun, 14 Jan 2018 00:00:00 +0000</pubDate><guid>https://realzhangm.github.io/post/cc++%E7%A8%8B%E5%BA%8F%E6%A3%80%E6%9F%A5%E5%B7%A5%E5%85%B7/</guid><description>静态代码检查工具 scan-build 在源码目录下执行make
scan-build make REF http://clang-analyzer.llvm.org/
infer linux下安装 VERSION=0.XX.Y; \ curl -sSL &amp;quot;https://github.com/facebook/infer/releases/download/v$VERSION/infer-linux64-v$VERSION.tar.xz&amp;quot; \ | sudo tar -C /opt -xJ &amp;amp;&amp;amp; \ ln -s &amp;quot;/opt/infer-linux64-v$VERSION/bin/infer&amp;quot; /usr/local/bin/infer mac下安装 brew install infer 使用 在源码目录下执行make
infer run -- make 运行时工具 谷歌sanitizers 谷歌sanitizers系列工具用于程序内存分析. (https://github.com/google/sanitizers) sanitizers以库的形式使用. GCC, Clang等编译器都已经集成, 编译程序时使用特定参数(-fsanitize=leak), 会将特定代码自动插入到程序中, 并链接sanitizers库. LeakSanitizer用于内存泄漏分析. GCC5.3以上支持LeakSanitizer.
例如使用gcc -fsanitize=leak 编译的程序. 通过SIGINT等信号退出程序, 分析结果会自动打印到终端
查看test进程内存使用大小
cat /proc/pidof test/status | grep VmRSS: REF http://fbinfer.com/docs/getting-started.html
https://github.com/google/sanitizers/wiki</description></item></channel></rss>